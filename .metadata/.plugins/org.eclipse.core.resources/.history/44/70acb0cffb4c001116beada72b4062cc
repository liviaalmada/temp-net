import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashSet;
import java.util.Scanner;

import org.jgrapht.graph.ClassBasedEdgeFactory;
import org.jgrapht.graph.DefaultWeightedEdge;

import tvg.DirectedTVG;
import tvg.TimeIntervalVertex;
import tvg.clustering.Cluster;
import tvg.clustering.FirstClusteringAlgorithm;


public class FirstTest {
	public static void main(String[] args) {
		
		DirectedTVG<DefaultWeightedEdge> g = new DirectedTVG<DefaultWeightedEdge>(
				new ClassBasedEdgeFactory<TimeIntervalVertex, DefaultWeightedEdge>(DefaultWeightedEdge.class));
		
		File file = new File("grafo-exemplo.txt"); 
		try {
			FileReader fReader = new FileReader(file);
			BufferedReader bReader = new BufferedReader(fReader);  
			
			String line = null;  
			line = bReader.readLine();
			int numVert = Integer.valueOf(line);
			
			System.out.println(numVert);
			double initTime;
			double finTime;
			double id;
			
			while(numVert>0){
				line = bReader.readLine();
				line.split(" ");
			}
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}  
		
		
		
		
		
		
//		g.addVertex(u);
//		g.addVertex(v);
//		g.addEdge(u, v);
//		DefaultWeightedEdge e = g.getEdge(u, v);
//		g.setEdgeWeight(e, 3);
//		System.out.println(g.getEdgeWeight(e));
//		
//		FirstClusteringAlgorithm cl = new FirstClusteringAlgorithm();
//		
//		HashSet<TimeIntervalVertex> a1 = new HashSet<TimeIntervalVertex>();
//		a1.add(u);
//		Cluster<TimeIntervalVertex, DefaultWeightedEdge> c1 = new Cluster<TimeIntervalVertex, DefaultWeightedEdge>(g,a1,u.getId());
//		
//		HashSet<TimeIntervalVertex> a2 = new HashSet<TimeIntervalVertex>();
//		a2.add(v);
//		Cluster<TimeIntervalVertex, DefaultWeightedEdge> c2 = new Cluster<TimeIntervalVertex, DefaultWeightedEdge>(g,a2,v.getId());
//		
//		g.addEdge(u, v);
//		try {
//			cl.execute(g);
//		} catch (Exception e1) {
//			// TODO Auto-generated catch block
//			e1.printStackTrace();
//		}
		//System.out.println(cl.similarity(c1, c2));
	}

}
